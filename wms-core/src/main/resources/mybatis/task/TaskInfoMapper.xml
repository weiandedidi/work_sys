<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lsh.wms.core.dao.task.TaskInfoDao" >

	<resultMap id="taskInfoResultMap" type="TaskInfo">
		<id property="id" column="id"/>
		<result property="taskId" column="task_id"/>
		<result property="taskName" column="task_name"/>
		<result property="planId" column="plan_id"/>
		<result property="waveId" column="wave_id"/>
		<result property="orderId" column="order_id"/>
		<result property="locationId" column="location_id"/>
		<result property="skuId" column="sku_id"/>
		<result property="containerId" column="container_id"/>
		<result property="mergedContainerId" column="merged_container_id"/>
		<result property="operator" column="operator"/>
		<result property="planner" column="planner"/>
		<result property="type" column="type"/>
		<result property="subType" column="sub_type"/>
		<result property="status" column="status"/>
		<result property="priority" column="priority"/>
		<result property="draftTime" column="draft_time"/>
		<result property="assignTime" column="assign_time"/>
		<result property="dueTime" column="due_time"/>
		<result property="finishTime" column="finish_time"/>
		<result property="cancelTime" column="cancel_time"/>
		<result property="holdTime" column="hold_time"/>
		<result property="ext1" column="ext1"/>
		<result property="ext2" column="ext2"/>
		<result property="ext3" column="ext3"/>
		<result property="ext4" column="ext4"/>
		<result property="ext5" column="ext5"/>
		<result property="ext6" column="ext6"/>
		<result property="ext7" column="ext7"/>
		<result property="ext8" column="ext8"/>
		<result property="ext9" column="ext9"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
		<result property="ownerId" column="owner_id"/>
		<result property="itemId" column="item_id"/>
		<result property="fromLocationId" column="from_location_id"/>
		<result property="toLocationId" column="to_location_id"/>
		<result property="qty" column="qty"/>
		<result property="packUnit" column="pack_unit"/>
		<result property="packName" column="pack_name"/>
		<result property="isAllocated" column="is_allocated"/>
		<result property="realFromLocationId" column="real_from_location_id"/>
		<result property="realToLocationId" column="real_to_location_id"/>
		<result property="qtyDone" column="qty_done"/>
		<result property="taskEaQty" column="task_ea_qty"/>
		<result property="date" column="date"/>
		<result property="transPlan" column="trans_plan"/>
		<result property="taskPackQty" column="task_pack_qty"/>
		<result property="taskBoardQty" column="task_board_qty"/>
		<result property="step" column="step"/>
		<result property="isShow" column="is_show"/>
		<result property="businessMode" column="business_mode"/>
		<result property="taskOrder" column="task_order"/>
		<result property="qcPreviousTaskId" column="qc_previous_task_id"/>
		<result property="qcSkip" column="qc_skip"/>
		<result property="taskAmount" column="task_amount"/>
	</resultMap>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="TaskInfo">
		insert into task_info (
			task_id,task_name,plan_id,wave_id,order_id,location_id,
			sku_id,container_id,merged_container_id,operator,planner,type,
			sub_type,status,priority,draft_time,assign_time,due_time,
			finish_time,cancel_time,hold_time,ext1,ext2,ext3,
			ext4,ext5,ext6,ext7,ext8,ext9,
			created_at,updated_at,owner_id,item_id,from_location_id,to_location_id,
			qty,pack_unit,pack_name,is_allocated,real_from_location_id,real_to_location_id,
			qty_done,task_ea_qty,date,trans_plan,task_pack_qty,task_board_qty,
			step,is_show,business_mode,task_order,qc_previous_task_id,qc_skip,
			task_amount
    	) values (
			#{taskId},#{taskName},#{planId},#{waveId},#{orderId},#{locationId},
			#{skuId},#{containerId},#{mergedContainerId},#{operator},#{planner},#{type},
			#{subType},#{status},#{priority},#{draftTime},#{assignTime},#{dueTime},
			#{finishTime},#{cancelTime},#{holdTime},#{ext1},#{ext2},#{ext3},
			#{ext4},#{ext5},#{ext6},#{ext7},#{ext8},#{ext9},
			#{createdAt},#{updatedAt},#{ownerId},#{itemId},#{fromLocationId},#{toLocationId},
			#{qty},#{packUnit},#{packName},#{isAllocated},#{realFromLocationId},#{realToLocationId},
			#{qtyDone},#{taskEaQty},#{date},#{transPlan},#{taskPackQty},#{taskBoardQty},
			#{step},#{isShow},#{businessMode},#{taskOrder},#{qcPreviousTaskId},#{qcSkip},
			#{taskAmount}
    	)
	</insert>

	<update id="update" parameterType="TaskInfo">
		update task_info
		<set>
			<if test="taskId != null">task_id=#{taskId},</if>
			<if test="taskName != null">task_name=#{taskName},</if>
			<if test="planId != null">plan_id=#{planId},</if>
			<if test="waveId != null">wave_id=#{waveId},</if>
			<if test="orderId != null">order_id=#{orderId},</if>
			<if test="locationId != null">location_id=#{locationId},</if>
			<if test="skuId != null">sku_id=#{skuId},</if>
			<if test="containerId != null">container_id=#{containerId},</if>
			<if test="mergedContainerId != null">merged_container_id=#{mergedContainerId},</if>
			<if test="operator != null">operator=#{operator},</if>
			<if test="planner != null">planner=#{planner},</if>
			<if test="type != null">type=#{type},</if>
			<if test="subType != null">sub_type=#{subType},</if>
			<if test="status != null">status=#{status},</if>
			<if test="priority != null">priority=#{priority},</if>
			<if test="draftTime != null">draft_time=#{draftTime},</if>
			<if test="assignTime != null">assign_time=#{assignTime},</if>
			<if test="dueTime != null">due_time=#{dueTime},</if>
			<if test="finishTime != null">finish_time=#{finishTime},</if>
			<if test="cancelTime != null">cancel_time=#{cancelTime},</if>
			<if test="holdTime != null">hold_time=#{holdTime},</if>
			<if test="ext1 != null">ext1=#{ext1},</if>
			<if test="ext2 != null">ext2=#{ext2},</if>
			<if test="ext3 != null">ext3=#{ext3},</if>
			<if test="ext4 != null">ext4=#{ext4},</if>
			<if test="ext5 != null">ext5=#{ext5},</if>
			<if test="ext6 != null">ext6=#{ext6},</if>
			<if test="ext7 != null">ext7=#{ext7},</if>
			<if test="ext8 != null">ext8=#{ext8},</if>
			<if test="ext9 != null">ext9=#{ext9},</if>
			<if test="createdAt != null">created_at=#{createdAt},</if>
			<if test="updatedAt != null">updated_at=#{updatedAt},</if>
			<if test="ownerId != null">owner_id=#{ownerId},</if>
			<if test="itemId != null">item_id=#{itemId},</if>
			<if test="fromLocationId != null">from_location_id=#{fromLocationId},</if>
			<if test="toLocationId != null">to_location_id=#{toLocationId},</if>
			<if test="qty != null">qty=#{qty},</if>
			<if test="packUnit != null">pack_unit=#{packUnit},</if>
			<if test="packName != null">pack_name=#{packName},</if>
			<if test="isAllocated != null">is_allocated=#{isAllocated},</if>
			<if test="realFromLocationId != null">real_from_location_id=#{realFromLocationId},</if>
			<if test="realToLocationId != null">real_to_location_id=#{realToLocationId},</if>
			<if test="qtyDone != null">qty_done=#{qtyDone},</if>
			<if test="taskEaQty != null">task_ea_qty=#{taskEaQty},</if>
			<if test="date != null">date=#{date},</if>
			<if test="transPlan != null">trans_plan=#{transPlan},</if>
			<if test="taskPackQty != null">task_pack_qty=#{taskPackQty},</if>
			<if test="taskBoardQty != null">task_board_qty=#{taskBoardQty},</if>
			<if test="taskAmount != null">task_amount=#{taskAmount},</if>
			<if test="step != null">step=#{step},</if>
			<if test="isShow != null">is_show=#{isShow},</if>
			<if test="businessMode != null">business_mode=#{businessMode},</if>
			<if test="taskOrder != null">task_order=#{taskOrder},</if>
			<if test="qcPreviousTaskId != null">qc_previous_task_id=#{qcPreviousTaskId},</if>
			<if test="qcSkip != null">qc_skip=#{qcSkip}</if>
		</set>
		where id=#{id}
	</update>

	<select id="getTaskInfoById" parameterType="Long" resultMap="taskInfoResultMap">
		select * from task_info
		where task_id=#{taskId}
	</select>

	<select id="lockById" parameterType="Long" resultMap="taskInfoResultMap">
		select * from task_info where task_id=#{taskId} for update
	</select>

	<select id="countTaskInfo" parameterType="map" resultType="int">
		select count(*) from task_info
		<include refid="queryCondition"/>
	</select>

	<select id="getTaskInfoList" parameterType="map" resultMap="taskInfoResultMap">
		select * from task_info
		<include refid="queryCondition"/>
		<if test="orderBy == null or orderType == null">
			ORDER BY  priority DESC,created_at DESC
		</if>
		<if test='"createdAt".equals(orderBy)  and "desc".equals(orderType)'>
			ORDER BY  created_at DESC
		</if>
		<if test=' "priority".equals(orderBy)  and  "desc".equals(orderType)'>
			ORDER BY  priority DESC
		</if>
		<if test=' "taskOrder".equals(orderBy)  and  "desc".equals(orderType)'>
			ORDER BY  task_order DESC
		</if>
		<if test=' "finishTime".equals(orderBy)  and  "desc".equals(orderType)'>
			ORDER BY  finish_time DESC
		</if>
		<if test=" 'status'.equals(orderBy)  and 'desc'.equals(orderType)">
			ORDER BY  status DESC
		</if>
		<if test=" 'createdAt'.equals(orderBy)  and 'asc'.equals(orderType)">
			ORDER BY  created_at ASC
		</if>
		<if test=" 'priority'.equals(orderBy)  and  'asc'.equals(orderType)">
			ORDER BY  priority ASC
		</if>
		<if test=" 'status'.equals(orderBy)  and  'asc'.equals(orderType)">
			ORDER BY  status ASC
		</if>
		<if test=" 'taskOrder'.equals(orderBy)  and  'asc'.equals(orderType)">
			ORDER BY  task_order ASC
		</if>
		<if test=" 'finishTime'.equals(orderBy)  and  'asc'.equals(orderType)">
			ORDER BY  finish_time ASC
		</if>
		<if test="start != null and limit != null">
		limit #{start},#{limit}
		</if>
	</select>

	<select id="getPerformance" parameterType="map" resultType="java.util.HashMap">
		select
			group_concat(task_id) as taskIds,
			operator as uid,
			type,
			sub_type,
			business_mode,
			count(id) as taskQty,
			count(distinct container_id) as containerQty,
			sum(task_ea_qty) as taskEaQty,
			sum(task_pack_qty) as taskPackQty,
		    ifnull(sum(task_amount),0) as taskAmount,
			ifnull(sum(task_board_qty),0) as taskBoardQty,
			date
		from task_info
		<where>
			status = 4
			<if test="type != null"> and type = #{type}</if>
			<if test="subType != null"> and sub_type = #{subType}</if>
			<if test="date != null"> and date = #{date}</if>
			<if test="uid != null"> and operator = #{uid}</if>
			<if test="uidList != null">
				and operator in
				<foreach collection="uidList"  item="item" index="index" open="(" separator=","  close=")">
					#{item}
				</foreach>
			</if>
			<if test="startDate != null">and #{startDate} &lt;= date</if>
			<if test="endDate != null">and date &lt;= #{endDate}</if>
		</where>
		 	group by operator, date, type, business_mode,sub_type
			order by date desc
		<if test="start != null and limit != null">
			limit #{start},#{limit}
		</if>
	</select>

	<select id="getPerformanceCount" parameterType="map" resultType="int">
		select count(t.num) from
		(select count(*) num from task_info
		<where>
			status = 4
			<if test="uid != null">and operator = #{uid}</if>
			<if test="uidList != null">
				and operator in
				<foreach collection="uidList"  item="item" index="index" open="(" separator=","  close=")">
					#{item}
				</foreach>
			</if>
			<if test="type != null">and type = #{type}</if>
			<if test="startDate != null">and #{startDate} &lt;= date</if>
			<if test="endDate != null">and date &lt;= #{endDate}</if>

		</where>
		group by operator, date, type, sub_type) t
	</select>

	<select id="getKanBanCount" parameterType="Long" resultType="java.util.HashMap">
		select sub_type,status, count(id) as taskNum, count(distinct container_id) as containerNum, sum(qty_done) as qtyNum from task_info
		where type = #{type} and  status not in (5,6) and DATE_FORMAT(FROM_UNIXTIME(draft_time),'%Y-%m-%d')>= date_format(NOW(),'%Y-%m-%d')
		group by status,sub_type
	</select>

	<select id="getKanBanCountNew" parameterType="map" resultMap="taskInfoResultMap">
		select * from task_info
		where type = #{type} and sub_type = #{subType} and  status not in (5,6) and DATE_FORMAT(FROM_UNIXTIME(draft_time),'%Y-%m-%d')>= date_format(NOW(),'%Y-%m-%d')
	</select>

	<select id="getKanBanCountByStatus" parameterType="Long" resultType="java.util.HashMap">
		select status, count(id) as taskNum, count(distinct container_id) as containerNum, sum(qty_done) as qtyNum from task_info
		where type = #{type} and  status not in (5,6) and DATE_FORMAT(FROM_UNIXTIME(draft_time),'%Y-%m-%d')>= date_format(NOW(),'%Y-%m-%d')
		group by status
	</select>

	<select id="getQty" parameterType="map" resultType="java.math.BigDecimal">
		select sum(qty) from task_info
		<include refid="queryCondition"/>
	</select>

	<select id="getDoneTasksByIds" parameterType="map" resultMap="taskInfoResultMap">
		select * from task_info
 		<where>
            <if test="taskIds != null">
                and task_id in
                <foreach collection="taskIds"  item="item" index="index" open="(" separator=","  close=")">
                    #{item}
                </foreach>
            </if>
            <if test="status != null">and status=#{status}</if>
        </where>
	</select>

	<sql id="queryCondition">
		<where>
			<if test="id != null">id=#{id}</if>
			<if test="taskId != null">and task_id=#{taskId}</if>
			<if test="taskName != null">and task_name=#{taskName}</if>
			<if test="planId != null">and plan_id=#{planId}</if>
			<if test="waveId != null">and wave_id=#{waveId}</if>
			<if test="orderId != null">and order_id=#{orderId}</if>
			<if test="locationId != null">and location_id=#{locationId}</if>
			<if test="skuId != null">and sku_id=#{skuId}</if>
			<if test="ownerId != null">and owner_id=#{ownerId}</if>
			<if test="itemId != null">and item_id=#{itemId}</if>
			<if test="itemIdList != null">
				and item_id in
				<foreach collection="itemIdList"  item="item" index="index" open="(" separator=","  close=")">
					#{item}
				</foreach>
			</if>
			<if test="fromLocationId != null">and from_location_id=#{fromLocationId}</if>
			<if test="fromLocationList != null">
				and from_location_id in
				<foreach collection="fromLocationList"  item="item" index="index" open="(" separator=","  close=")">
					#{item}
				</foreach>
			</if>
			<if test="toLocationId != null">and to_location_id=#{toLocationId}</if>
			<if test="toLocationList != null">
				and to_location_id in
				<foreach collection="toLocationList"  item="item" index="index" open="(" separator=","  close=")">
					#{item}
				</foreach>
			</if>
			<if test="locationObj != null">
				and  ( ${locationObj.getLocationId()} &lt;= to_location_id and to_location_id &lt;= ${locationObj.getRightRange()} )
			</if>
			<if test="qty != null">and qty=#{qty}</if>
			<if test="realFromLocationId != null">and real_from_location_id=#{realFromLocationId}</if>
			<if test="realToLocationId != null">and real_to_location_id=#{realToLocationId}</if>
			<if test="qtyDone != null">and qty_done=#{qtyDone}</if>
			<if test="packUnit != null">and pack_unit=#{packUnit}</if>
			<if test="packName != null">and pack_name=#{packName}</if>
			<if test="containerId != null">and container_id=#{containerId}</if>
			<if test="operator != null">and operator=#{operator}</if>
			<if test="planner != null">and planner=#{planner}</if>
			<if test="type != null">and type=#{type}</if>
			<if test="subType != null">and sub_type=#{subType}</if>
			<if test="status != null">and status=#{status}</if>
			<if test="isAllocated != null">and is_allocated=#{isAllocated}</if>
			<if test="priority != null">and priority=#{priority}</if>
			<if test="draftTime != null">and draft_time=#{draftTime}</if>
			<if test="assignTime != null">and assign_time=#{assignTime}</if>
			<if test="dueTime != null">and due_time=#{dueTime}</if>
			<if test="dueTimeAfter != null">and due_time&gt;=#{dueTimeAfter}</if>
			<if test="dueTimeBefore != null">and due_time&lt;=#{dueTimeBefore}</if>
			<if test="finishTime != null">and finish_time=#{finishTime}</if>
			<if test="finishTimeAfter != null">and finish_time&gt;=#{finishTimeAfter}</if>
			<if test="finishTimeBefore != null">and finish_time&lt;=#{finishTimeBefore}</if>
			<if test="cancelTime != null">and cancel_time=#{cancelTime}</if>
			<if test="holdTime != null">and hold_time=#{holdTime}</if>
			<if test="ext1 != null">and ext1=#{ext1}</if>
			<if test="ext2 != null">and ext2=#{ext2}</if>
			<if test="ext3 != null">and ext3=#{ext3}</if>
			<if test="ext4 != null">and ext4=#{ext4}</if>
			<if test="ext5 != null">and ext5=#{ext5}</if>
			<if test="ext6 != null">and ext6=#{ext6}</if>
			<if test="ext7 != null">and ext7=#{ext7}</if>
			<if test="ext8 != null">and ext8=#{ext8}</if>
			<if test="ext9 != null">and ext9=#{ext9}</if>
			<if test="createdAt != null">and created_at=#{createdAt}</if>
			<if test="createdAtAfter != null">and created_at&gt;=#{createdAtAfter}</if>
			<if test="createdAtBefore != null">and created_at&lt;=#{createdAtBefore}</if>
			<if test="updatedAt != null">and updated_at=#{updatedAt}</if>
			<if test="ownerId != null">and owner_id=#{ownerId}</if>
			<if test="itemId != null">and item_id=#{itemId}</if>
			<if test="fromLocationId != null">and from_location_id=#{fromLocationId}</if>
			<if test="toLocationId != null">and to_location_id=#{toLocationId}</if>
			<if test="qty != null">and qty=#{qty}</if>
			<if test="packUnit != null">and pack_unit=#{packUnit}</if>
			<if test="packName != null">and pack_name=#{packName}</if>
			<if test="isAllocated != null">and is_allocated=#{isAllocated}</if>
			<if test="realFromLocationId != null">and real_from_location_id=#{realFromLocationId}</if>
			<if test="realToLocationId != null">and real_to_location_id=#{realToLocationId}</if>
			<if test="qtyDone != null">and qty_done=#{qtyDone}</if>
			<if test="taskEaQty != null">and task_ea_qty=#{taskEaQty}</if>
			<if test="date != null">and date=#{date}</if>
			<if test="transPlan != null">and trans_plan=#{transPlan}</if>
			<if test="taskPackQty != null">and task_pack_qty=#{taskPackQty}</if>
			<if test="taskBoardQty != null">and task_board_qty=#{taskBoardQty}</if>
			<if test="taskAmount != null">and task_amount=#{taskAmount}</if>
			<if test="step != null">and step=#{step}</if>
			<if test="isShow != null">and is_show=#{isShow}</if>
			<if test="businessMode != null">and business_mode=#{businessMode}</if>
			<if test="taskOrder != null">and task_order=#{taskOrder}</if>
			<if test="qcPreviousTaskId != null">and qc_previous_task_id=#{qcPreviousTaskId}</if>
			<if test="qcSkip != null">and qc_skip=#{qcSkip}</if>
			<if test="mergedContainerId != null">and merged_container_id=#{mergedContainerId}</if>
			<if test="valid !=null"> and status in (1,2)</if>
		</where>
	</sql>

</mapper>