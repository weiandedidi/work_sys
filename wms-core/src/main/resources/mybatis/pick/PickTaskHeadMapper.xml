<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lsh.wms.core.dao.pick.PickTaskHeadDao" >

	<resultMap id="pickTaskHeadResultMap" type="PickTaskHead">
		<id property="id" column="id"/>
		<result property="taskId" column="task_id"/>
		<result property="deliveryId" column="delivery_id"/>
		<result property="waveId" column="wave_id"/>
		<result property="containerId" column="container_id"/>
		<result property="allocCollectLocation" column="alloc_collect_location"/>
		<result property="realCollectLocation" column="real_collect_location"/>
		<result property="pickZoneId" column="pick_zone_id"/>
		<result property="pickAt" column="pick_at"/>
		<result property="createdAt" column="created_at"/>
		<result property="updatedAt" column="updated_at"/>
	</resultMap>
  
	<insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="PickTaskHead">
		insert into pick_task_head (
			task_id,delivery_id,wave_id,pick_type,container_id,
			alloc_collect_location,real_collect_location,pick_zone_id,pick_at,created_at,updated_at
    	) values (
			#{taskId},#{deliveryId},#{waveId},#{pickType},#{containerId},
			#{allocCollectLocation},#{realCollectLocation},#{pickZoneId},#{pickAt},#{createdAt},#{updatedAt}
    	)
	</insert>

	<update id="update" parameterType="PickTaskHead">
		update pick_task_head
    	<set>
  			<if test="taskId != null">task_id=#{taskId},</if>
  			<if test="deliveryId != null">delivery_id=#{deliveryId},</if>
  			<if test="waveId != null">wave_id=#{waveId},</if>
  			<if test="pickType != null">pick_type=#{pickType},</if>
  			<if test="containerId != null">container_id=#{containerId},</if>
  			<if test="allocCollectLocation != null">alloc_collect_location=#{allocCollectLocation},</if>
  			<if test="realCollectLocation != null">real_collect_location=#{realCollectLocation},</if>
			<if test="pickZoneId != null">pick_zone_id=#{pickZoneId},</if>
  			<if test="pickAt != null">pick_at=#{pickAt},</if>
  			<if test="createdAt != null">created_at=#{createdAt},</if>
  			<if test="updatedAt != null">updated_at=#{updatedAt}</if>
		</set>
		where id=#{id}
	</update>
  
	<select id="getPickTaskHeadById" parameterType="int" resultMap="pickTaskHeadResultMap">
		select * from pick_task_head
		where ID=#{id} 
	</select>

	<select id="getPickTaskHeadByTaskId" parameterType="Long" resultMap="pickTaskHeadResultMap">
		select * from picktask_head
		where task_id=#{taskId}
	</select>
  
	<select id="countPickTaskHead" parameterType="map" resultType="int">
		select count(*) from pick_task_head
		<include refid="queryCondition"/>
	</select>
  
	<select id="getPickTaskHeadList" parameterType="map" resultMap="pickTaskHeadResultMap">
		select * from pick_task_head
		<include refid="queryCondition"/>
		<if test="start != null and limit != null">
		limit #{start},#{limit}
		</if>
	</select>
  
	<sql id="queryCondition">
		<where>
			<if test="id != null">id=#{id}</if>
			<if test="taskId != null">and task_id=#{taskId}</if>
			<if test="deliveryId != null">and delivery_id=#{deliveryId}</if>
			<if test="waveId != null">and wave_id=#{waveId}</if>
			<if test="transPlan != null">and trans_plan=#{transPlan}</if>
			<if test="pickType != null">and pick_type=#{pickType}</if>
			<if test="containerId != null">and container_id=#{containerId}</if>
			<if test="allocCollectLocation != null">and alloc_collect_location=#{allocCollectLocation}</if>
			<if test="realCollectLocation != null">and real_collect_location=#{realCollectLocation}</if>
			<if test="pickZoneId != null">and pick_zone_id=#{pickZoneId}</if>
			<if test="pickAt != null">and pick_at=#{pickAt}</if>
			<if test="createdAt != null">and created_at=#{createdAt}</if>
			<if test="updatedAt != null">and updated_at=#{updatedAt}</if>
		</where>
	</sql>
   
</mapper>